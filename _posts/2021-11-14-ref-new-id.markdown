---
title: 신규 아이디 추천
excerpt: 문자열 다루기. isalpha() isdigit() 그리고 정규식 re
date: 2021-11-14 14:10:00 +0800
categories: [코테연습, python3]
tags: [코딩테스트, 프로그래머스(Level1), 문자열, 정규식]
toc: true
---

> 프로그래머스 코딩테스트 연습
> 난이도 Level 1

***

### 문제
* 1단계 new_id의 모든 대문자를 대응되는 소문자로 치환합니다.
* new_id에서 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.)를 제외한 모든 문자를 제거합니다.
* 3단계 new_id에서 마침표(.)가 2번 이상 연속된 부분을 하나의 마침표(.)로 치환합니다.
* 4단계 new_id에서 마침표(.)가 처음이나 끝에 위치한다면 제거합니다.
* 5단계 new_id가 빈 문자열이라면, new_id에 "a"를 대입합니다.
* 6단계 new_id의 길이가 16자 이상이면, new_id의 첫 15개의 문자를 제외한 나머지 문자들을 모두 제거합니다.
     만약 제거 후 마침표(.)가 new_id의 끝에 위치한다면 끝에 위치한 마침표(.) 문자를 제거합니다.
* 7단계 new_id의 길이가 2자 이하라면, new_id의 마지막 문자를 new_id의 길이가 3이 될 때까지 반복해서 끝에 붙입니다.

### 나의 풀이

```python
def solution(inputID):
    new_id = ''
    # 1단계: 소문자 바꾸기
    inputID = inputID.lower()
    #2단계 - . _ 제외한 특수문자 제거
    dict = {'!':'', '`':'', '#':'', '@':'', '$':'', '%':'', '^':'','&':'',
             '*':'','(':'',')':'','+':'','=':'','/':'','?':'','<':'','>':'',
             ':':'',';':'',',':'','~':'','{':'','}':'','[':'',']':'','|':'','\\':''}
    new_id = new_id.translate(str.maketrans(dict))
    #3단계 : 2번 이상 연속된 ..을 .으로 치환
    while new_id.find('..') >= 0:  #.find() 찾은 문자열의 인덱스를 반환
        new_id = new_id.replace('..', '.')
    #4단계 : 처음과 끝의 . 제거
    new_id = new_id.strip('.')
    #5단계 : 빈 문자열일 경우  a 대입
    if new_id == '':
        new_id = 'a'
    #6단계 16자 이상이면 15개를 제외한 나머지 삭제, 끝이 .으로 끝날경우 . 삭제
    if len(new_id)>15:
        new_id = new_id[:15]
    new_id = new_id.rstrip('.')
    #7단계
    while len(new_id)<3:
        new_id = new_id + new_id[-1]
    return new_id
```

2단계 가내수공업ㅋㅋㅋㅋ
진짜 이 방법 밖에 없어..? 하고 다른 사람 풀이를 보니 "정규식"이라는게 있었다.<br>정규식을 사용할 경우

```python
import re

new_id = re.sub('[^a-z0-9\-_.]', '', new_id)
```

이렇게 간단하게 ...끝난다.... 와우
나중에 한 번 시간내서 공부해봐야겠다.

그 외의 풀이(2단계)
```python
for c in new_id:
	if c.isalpha() or c.isdigit() or c in ['-', '_', '.']:
    answer += c
```
isalpha와 isdigit 메서드를 이용하여 간단하게 처리하였다.

### 배운 것
- isalpha(): 문자열에 알파벳이 포함되어 있는지 확인. return True or False
- isdigit(): 문자열에 숫자가 포함되어 있는지 확인.
- isalnum(): 문자열이 알파벳과 숫자로 이루어졌는지 확인.
- isupper()/islower(): 문자열이 대문자/소문자인지 확인.
- 정규식 re 모듈이 있다는 것..^^ 찾아보니 너무 복잡해서 따로 정리해야겠다.
